var a = <any>5;
        ~~~~~~ [0]

var b = <number><any>5;
        ~~~~~~~~~~~~~~ [0]

var c = <number>(5 as any);
        ~~~~~~~~~~~~~~~~~~ [0]

var d = <any> 5 as number;
        ~~~~~~~ [0]

var e = 5 as any as number;

let f = <number><any>flag & value;
        ~~~~~~~~~~~~~~~~~ [0]
f = <number><any>flag | value;
    ~~~~~~~~~~~~~~~~~ [0]

let g = <A><any>a;
        ~~~~~~~~~ [0]

let h = <AsyncIterableIterator><any>a;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

interface Action {
    payload: number | false;
}

const action: Action = {
    payload: 5,
}

const booleanAction: Action = {
    payload: false,
}

const a = 5 + <number>action.payload;
              ~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 - <number>action.payload;
              ~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 * <number>action.payload;
              ~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 / <number>action.payload;
              ~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 % <number>action.payload;
              ~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 && <number>action.payload;
               ~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 || <number>action.payload;
               ~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 % <number><any>action.payload;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 && <number><any>action.payload;
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = 5 || <number><any>action.payload;
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = true || <boolean>booleanAction.payload;
                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

const a = false && <boolean>booleanAction.payload;
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [0]
[0]: Type assertion using the '<>' syntax is forbidden. Use the 'as' syntax instead.
