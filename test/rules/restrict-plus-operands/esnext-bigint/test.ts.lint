[typescript]: >= 3.2.0
type MyNumber = number;
type MyString = string;
type MyBigInt = bigint;
interface NumberStringBigint {
    first: MyNumber,
    second: MyString,
    third: MyBigInt
}

var x = 5;
var y = "10";
var bigintVar = BigInt(200);
var anyVar: any = 200;
var pair: NumberStringBigint = {
    first: 5,	    first: 5,
    second: "10"	    second: "10",
    third: BigInt(100),
};

const bigIntPassA = BigInt(1) + BigInt(2);
const bigIntPassB = BigInt(1) + 100n;
const bigIntFailA = BigInt(1) + 2;
                    ~~~~~~~~~~~~~  [Operands of '+' operation must either be both strings or both numbers or both bigints, but found bigint + 2]
const bigIntFailB = BigInt(1) + "failureString";
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~  [Operands of '+' operation must either be both strings or both numbers or both bigints, but found bigint + "failureString". Consider using template literals.]

const bigIntFailC = bigintVar + x;
                    ~~~~~~~~~~~~~ [Operands of '+' operation must either be both strings or both numbers or both bigints, but found bigint + number]
const bigIntFailD = y + bigintVar;
                    ~~~~~~~~~~~~~ [Operands of '+' operation must either be both strings or both numbers or both bigints, but found string + bigint. Consider using template literals.]
const bigIntFailE = bigintVar + anyVar;
                    ~~~~~~~~~~~~~~~~~~ [Operands of '+' operation must either be both strings or both numbers or both bigints, but found bigint + any]

const bigIntFailF = pair.first + pair.third;
                    ~~~~~~~~~~~~~~~~~~~~~~~  [Operands of '+' operation must either be both strings or both numbers or both bigints, but found number + bigint]
const bigIntFailG = pair.third + pair.second;
                    ~~~~~~~~~~~~~~~~~~~~~~~~  [Operands of '+' operation must either be both strings or both numbers or both bigints, but found bigint + string. Consider using template literals.]
const bigIntFailH = bigintVar + [];
                    ~~~~~~~~~~~~~~  [Operands of '+' operation must either be both strings or both numbers or both bigints, but found bigint + []]
const bigIntFailI = bigintVar + {};
                    ~~~~~~~~~~~~~~  [Operands of '+' operation must either be both strings or both numbers or both bigints, but found bigint + {}]
