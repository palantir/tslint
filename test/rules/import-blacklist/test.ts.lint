import { Observable } from 'rxjs';
                            ~~~~ [0]
import { Observable } from 'rxjs/Observable';

import rxjs = require('rxjs');
                       ~~~~ [0]
import Observable = require('rxjs/Observable');

import * as rxjs from "rxjs";
                       ~~~~ [0]

// non-static imports cannot be checked
import {Observable} from rxjs;
import forOwn = require(lodash);

import * as notBlacklisted from "not-blacklisted";

export * from 'rxjs';
               ~~~~ [0]

export { default } from "dummy";
       ~~~~~~~~~~~ [3]

export * from "lodash";
               ~~~~~~ [1]

import * as lodash from "lodash";
                         ~~~~~~ [1]
import { difference } from "lodash";

import { pull, difference } from "lodash";
       ~~~~~~~~~~~~~~~~~~~~ [2]

import lodash, { pull } from "lodash";
       ~~~~~~~~~~~~~~~~ [2]

import { pull as notPull } from "lodash";
       ~~~~~~~~~~~~~~~~~~~ [2]

import test from "dummy";
       ~~~~ [3]

import {myFunc} from './my.temp';
                      ~~~~~~~~~ [4]

import {myFunc} from './my.tmp';
                      ~~~~~~~~ [5]


[0]: Importing this module is blacklisted. Try importing a submodule instead.
[1]: Some named exports from this module are blacklisted for importing (or re-exporting). Import/re-export only the specific values you want, instead of the whole module.
[2]: The export "pull" is blacklisted.
[3]: Importing (or re-exporting) the default export is blacklisted.
[4]: This import is blacklisted by /.*\.temp$/
[5]: This import is blacklisted by /.*\.tmp$/
