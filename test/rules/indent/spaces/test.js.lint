// valid code

    var func = () => {
        console.warn("hi");
    };

    class TestClass1 {
        variable;

        testFunction() {
            this.variable = 3;
        }
    }

    var obj = {
        a: 1,
        b: 2,
        c: 3
    };

    switch (integerValue) {
        case 1:
            console.warn("1");
            break;
        default:
            console.warn("default");
            break;
    }

    function loops() {
        for (var i = 0; i < 1; ++i) {
            console.warn(i);
        }

        while (i < 1) {
            console.warn(i);
        }

        do {
            console.warn(i);
        } while (i < 1);

        if (i < 1) {
            console.warn(i);
        } else {
            console.warn(i + 1);
        }
    }


// invalid code
// we get a weird scenario here where our ~~ underlines don't quite line up with the line above
// this is because tabs are only one character and thus only one ~ goes beneath them.

function name() {
		var test = 123;
~~ [0]
}

class TestClass {
	variable;
~ [0]

	testFunction() {
~ [0]
		this.variable = 3;
~~ [0]
	}
~ [0]
}

var obj = {
	a: 1,
~ [0]
    b: 2,
    c: 3
};

switch (integerValue) {
	case 0:
~ [0]
		console.warn("1");
~~ [0]
		break;
~~ [0]
    case 1:
        console.warn("1");
        break;
	default:
~ [0]
		console.warn("default");
~~ [0]
		break;
~~ [0]
}

for (var i = 0; i < 1; ++i) {
	console.warn("123");
~ [0]
}

while (i < 1) {
	console.warn("123");
~ [0]
}

do {
	console.warn("123");
~ [0]
} while (i < 1);

if (i < 1) {
	console.warn("123");
~ [0]
}

var arr = [
	1,
~ [0]
    2
];

var arr2 = [
    {
		a: 1,
~~ [0]
        b: 2
	},
~ [0]
    {
        a: 3,
        b: 4
    }
];

[0]: space indentation expected
