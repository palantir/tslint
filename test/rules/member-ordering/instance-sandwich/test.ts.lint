class Good {
    public static a = 1;
    protected static b = 2;
    private static c = 3;
    public d = 4;
    protected e: number = 5;
    private f = foo();
    constructor() {}
    j = () => {};
    protected k() {}
    private l = () => {};
    public static g() {}
    protected static h() {}
    private static i = () => {};
}

interface IGood {
    foo: number;
    arrowsAreFields: () => void;
    nonArrowsAreMethods(): void;
}

class Bad {
    public static a = 1;
    public d = 4;
    protected static b = 2;
    ~~~~~~~~~~~~~~~~~~~~~~~ [Declaration of protected static field not allowed after declaration of public instance field. Instead, this should come after public static fields.]
    private static c = 3;
    ~~~~~~~~~~~~~~~~~~~~~ [Declaration of private static field not allowed after declaration of public instance field. Instead, this should come after protected static fields.]
    protected e: number = 5;
    private f = foo();
    j = () => {};
    protected k() {}
    private l = () => {};
    public static g() {}
    protected static h() {}
    private static i = () => {};
    constructor() {}
    ~~~~~~~~~~~~~~~~ [Declaration of constructor not allowed after declaration of private static method. Instead, this should come after private instance fields.]
}
