class X {
    // Different categories have alphabetization together.
    bar: number;
    foo: string;

    set z(x: number) {}
    get z() {
        ~     [Getter for 'z' should appear before setter.]
        return 0;
    }

    get y() {
        ~     ['y' should come alphabetically before 'z']
        return 0;
    }
    set y(x: number) {}
        ~               ['y' should come alphabetically before 'z']

    [Symbol.iterator]() {}
    // No ordering among computed properties
    [Symbol.alpherator]() {}

    0() {}
    2() {}
    1() {}
    ~ ['1' should come alphabetically before '2']

    foo() {}
    "goo"() {}
    Hoo() {}
    ioo() {}
    bar() {}
    ~~~ ['bar' should come alphabetically before 'foo']

    // Computed properties must go at the beginning.
    [Symbol.zeterator]() {}
    ~~~~~~~~~~~~~~~~~~ [Computed property should come alphabetically before '0']
}
