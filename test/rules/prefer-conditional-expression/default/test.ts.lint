let x;
if (true) {
~~ [err % ('x')]
    x = 1;
} else {
    x = 2;
}

if (true)
    x = "TRUE";
else if (false)
    x = "FALSE";
else
    x = "FILE_NOT_FOUND";

// multiple else-if statements
if (a) {
    x = 1;
} else if (b) {
    x = 2;
} else if (c) {
    x = 3;
} else {
    x = 4;
}

// Must assign same variable
if (true) {
    x = 1;
} else {
    y = 2;
}

// All branches must be present
if (true) {
    x = 1;
}

// Must not be a multi-statement block.
if (true) {
    x = 1;
} else {
    x = 2;
    y = 3;
}

// Or even multi-line.
if (true)
    x = [
        1,
        2
    ];
else
    x = 3;

// Works for complex left hand side.
if (true) {
~~ [err % ('foo(bar).baz')]
    foo(bar).baz = 0;
} else {
    foo(bar).baz = 1;
}

// checks return statements
if (true) {
~~ [err2]
    return 1;
} else {
    return 2;
}

if (a) {
    return 1;
} else if (b) {
    return 2;
} else if(c) {
    return 3;
} else {
    return 4;
}

if (true) {
    x = 1;
    return 1;
} else {
    return 2;
}

if (true) {
    return 1;
}

[err]: Use a conditional expression instead of assigning to '%s' in multiple places.
[err2]: Use a conditionial expression instead of returning in multiple places.