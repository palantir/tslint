let x = (3);
        ~~~  [Don't include unnecessary parentheses around an expression of type LiteralExpression]
let y = (x);
        ~~~  [Don't include unnecessary parentheses around an expression of type Identifier]
function foo() {
    return (1);
           ~~~  [Don't include unnecessary parentheses around an expression of type LiteralExpression]
}
(     x    );
~~~~~~~~~~~~  [Don't include unnecessary parentheses around an expression of type Identifier]

let x = (1 + 1);
        ~~~~~~~  [Don't include unnecessary parentheses around the initializer child of an expression of type VariableDeclaration]
foo((1 + 1), (2 + 2));
    ~~~~~~~            [Don't include unnecessary parentheses around the arguments child of an expression of type CallExpression]
             ~~~~~~~   [Don't include unnecessary parentheses around the arguments child of an expression of type CallExpression]
console.log(((1 + 1)) * 2);
             ~~~~~~~        [Don't include unnecessary parentheses around the expression child of an expression of type ParenthesizedExpression]
let x: (string) = 'b';
       ~~~~~~~~        [Don't include unnecessary parentheses around an expression of type Keyword]
let x = (false);
        ~~~~~~~  [Don't include unnecessary parentheses around an expression of type Keyword]

// No issues with
let z = (x) => x + 1;
let x = (1 + 1) * 2;
(f());
