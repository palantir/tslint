var x = 3
a += b

c = () => {
}

d = function() { }

console.log("i am adam, am i?")

function xyz() {
    return
}

switch(xyz) {
    case 1:
        break
    case 2:
        continue
}

throw new Error("some error")

do {
    var a = 4
} while(x == 3)

debugger

import v = require("i")
module M {
    export var x
}

function useStrictUnnecessarySemicolon() {
    "use strict"
    return null
}

class MyClass {
    public name : string
    private index : number
    private email : string
    public initializedProperty = 6
    public initializedMethodProperty = () => { return "hi" }

}

interface ITest {
    foo?: string
    bar: number
    baz: boolean
}

import {Router} from 'aurelia-router'

import {Controller} from 'my-lib'

// Edge cases when not omitting semicolon needs to be supported

var a = 1;
("1" + "2").length

var a = 1;
[].length

var a = 1;
+"a"

var a = 1;
-1

var a = 1
;("1" + "2").length

var a = 1
;[].length

var a = 1
;+"a"

var a = 1
;-1

// For loops uses semicolons as well so make sure we aren't breaking those

for (var i = 0; i < 10; ++i) {
  // do something
}

export default LoginPage
export default LoginPage

export = Date
export = Date
