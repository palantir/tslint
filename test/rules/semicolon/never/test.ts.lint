var x = 3;
         ~ [unnecessary semicolon]
a += b;
      ~ [unnecessary semicolon]

c = () => {
};
 ~ [unnecessary semicolon]

d = function() { };
                  ~ [unnecessary semicolon]

console.log("i am adam, am i?");
                               ~ [unnecessary semicolon]

function xyz() {
    return;
          ~ [unnecessary semicolon]
}

switch(xyz) {
    case 1:
        break;
             ~ [unnecessary semicolon]
    case 2:
        continue;
                ~ [unnecessary semicolon]
}

throw new Error("some error");
                             ~ [unnecessary semicolon]

do {
    var a = 4;
             ~ [unnecessary semicolon]
} while(x == 3);
               ~ [unnecessary semicolon]

debugger;
        ~ [unnecessary semicolon]

import v = require("i");
                       ~ [unnecessary semicolon]
module M {
    export var x;
                ~ [unnecessary semicolon]
}

function useStrictUnnecessarySemicolon() {
    "use strict";
                ~ [unnecessary semicolon]
    return null
}

class MyClass {
    public name : string;
                        ~ [unnecessary semicolon]
    private index : number;
                          ~ [unnecessary semicolon]
    private email : string
    public initializedProperty = 6
    public initializedMethodProperty = () => { return "hi" };
                                                            ~ [unnecessary semicolon]

}

interface ITest {
    foo?: string;
                ~ [unnecessary semicolon]
    bar: number;
               ~ [unnecessary semicolon]
    baz: boolean
}

import {Router} from 'aurelia-router'

import {Controller} from 'my-lib';
                                 ~ [unnecessary semicolon]

// Edge cases when not omitting semicolon needs to be supported

var a = 1;
("1" + "2").length

var a = 1;
[].length

var a = 1;
+"a"

var a = 1;
-1

var a = 1
;("1" + "2").length

var a = 1
;[].length

var a = 1
;+"a"

var a = 1
;-1

// For loops uses semicolons as well so make sure we aren't breaking those

for (var i = 0; i < 10; ++i) {
  // do something
}

export default LoginPage;
                        ~ [unnecessary semicolon]
export default LoginPage

export = Date;
             ~ [unnecessary semicolon]
export = Date
