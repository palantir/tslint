var x = 3
         ~nil [Missing semicolon]
a += b
      ~nil [Missing semicolon]

c = () => {
}
 ~nil [Missing semicolon]

d = function() { }
                  ~nil [Missing semicolon]

console.log("i am adam, am i?")
                               ~nil [Missing semicolon]

function xyz() {
    return
          ~nil [Missing semicolon]
}

switch(xyz) {
    case 1:
        break
             ~nil [Missing semicolon]
    case 2:
        continue
                ~nil [Missing semicolon]
}

throw new Error("some error")
                             ~nil [Missing semicolon]

do {
    var a = 4
             ~nil [Missing semicolon]
} while(x == 3)
               ~nil [Missing semicolon]

debugger
        ~nil [Missing semicolon]

import v = require("i")
                       ~nil [Missing semicolon]
module M {
    export var x
                ~nil [Missing semicolon]
    export function f(s: string): string;
    export function f(n: number): number
                                        ~nil [Missing semicolon]
    export function f(x: any) { return x; }
}

declare module "M" {
    function f(): number;
    function g(): number
                        ~nil [Missing semicolon]
}

function useStrictMissingSemicolon() {
    "use strict"
                ~nil [Missing semicolon]
    return null;
}

class MyClass {
    public name : string
                        ~nil [Missing semicolon]
    private index : number
                          ~nil [Missing semicolon]
    private email : string;

    public initializedProperty = 6
                                  ~nil [Missing semicolon]
    public initializedMethodProperty = () => {
        return "hi";
    };
     ~ [Unnecessary semicolon]

    public initializedMethodPropertyWithoutSemicolon = () => {
        return "hi again";
    }

    public initializedMethodProperty1Line = () => { return "hi"; };

    public initializedMethodPropertyWithoutSemicolon1Line = () => { return "hi again"; }
                                                                                        ~nil [Missing semicolon]
}

interface ITest {
    foo?: string
                ~nil [Missing semicolon]
    bar: number
               ~nil [Missing semicolon]
    qux: string,
                ~nil [Missing semicolon]
    baz: boolean;

    readonly raz: number;
}

import {Router} from 'aurelia-router';

import {Controller} from 'my-lib'
                                 ~nil [Missing semicolon]

export default LoginPage;
export default LoginPage
                        ~nil [Missing semicolon]
export = Date;
export = Date
             ~nil [Missing semicolon]
type t = number;
type t = number
               ~nil [Missing semicolon]
