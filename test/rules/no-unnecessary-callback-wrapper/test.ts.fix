f;

f;

(x, y) => f(x, y, 0);
(x, y) => f(y, x);

f;

(x, ...y) => f(x, y);

f;

// Ignore if function is not an identifier
(x) => obj.f(x);
(x) => obj["f"](x);
x => foo()(x);
// x is not only used as argument
(x) => obj[x](x);
x => x(x);

// allow async arrows
async (x) => f(x);

// Not bothering to catch this case.
({ x, y }) => f({ x, y });

