f;

f;

(x, y) => f(x, y, 0);
(x, y) => f(y, x);

f;

(x, ...y) => f(x, y);

f;

// Not catching this case (obj.f may need a 'this' binding)
(x) => obj.f(x);
// x is not only used as argument
(x) => obj[x](x);

// ignore when callback is no identifier
(x) => (++i)(x);
(x) => foo()(x);

// allow async arrows
async (x) => f(x);

// Not bothering to catch this case.
({ x, y }) => f({ x, y });

