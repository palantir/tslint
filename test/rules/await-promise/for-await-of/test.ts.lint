[typescript]: >= 2.3.0
async function correct(foo: AsyncIterableIterator<string>) {
    for await (const element of foo) {}
}

async function correct2() {
    for await (const element of generator()) {}
}

async function correct(foo: AsyncIterable<string>) {
    for await (const element of foo) {}
}

async function correct3(foo: AsyncIterableIterator<string> | AsyncIterableIterator<number>) {
    for await (const element of foo) {}
}

async function incorrect(foo: <Array<Promise<string>>) {
    for await (const element of foo) {}
                                ~~~ [0]
}

async function incorrect2(foo: IterableIterator<Promise<string>>) {
    for await (const element of foo) {}
                                ~~~ [0]
}

async function incorrect3() {
    for await (const element of generator) {}
                                ~~~~~~~~~ [0]
}

async function* generator() {
    yield 1;
}

[0]: 'for-await-of' of non-AsyncIterable.
