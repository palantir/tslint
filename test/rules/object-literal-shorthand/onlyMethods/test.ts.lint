const badMethodsGoodProps = {
  w: function() {},
  ~~~~~~~~~~~ [LONGHAND_METHOD % ("('{w() {...}}')")]
  x: function *() {},
  ~~~~~~~~~~~~~  [LONGHAND_METHOD % ("('{*x() {...}}')")]
  [y]: function() {},
  ~~~~~~~~~~~~~  [LONGHAND_METHOD % ("('{[y]() {...}}')")]
  z: z
};

const goodMethodsBadProps = {
  w() {},
  *x() {},
  [y]() {},
  z
  ~  [OBJECT_LITERAL_DISALLOWED]
};

const arrows = {
  x: (y) => y  // this is OK.
};

const namedFunctions = {
  x: function y() {}  // named function expressions are also OK.
};

const quotes = {
  "foo-bar": function() {},
  ~~~~~~~~~~~~~~~~~~~  [LONGHAND_METHOD % ("('{\"foo-bar\"() {...}}')")]
  "foo-bar"() {}
};

const extraCases = {
  x,
  ~  [OBJECT_LITERAL_DISALLOWED]
  a: 123,
  b: "hello",
  c: 'c',
  ["a" + "nested"]: {
    x: x
  }
};

const asyncFn = {
  foo: async function() {},
  ~~~~~~~~~~~~~~~~~~~  [LONGHAND_METHOD % ("('{async foo() {...}}')")]
  bar: async function*() {}
  ~~~~~~~~~~~~~~~~~~~~  [LONGHAND_METHOD % ("('{async *bar() {...}}')")]
}

({foo: foo} = {foo: foo});
({foo} = {foo});
  ~~~ [OBJECT_LITERAL_DISALLOWED]
          ~~~ [OBJECT_LITERAL_DISALLOWED]

[OBJECT_LITERAL_DISALLOWED]: Shorthand property assignments have been disallowed.
[LONGHAND_METHOD]: Expected method shorthand in object literal %s.
[LONGHAND_PROPERTY]: Expected property shorthand in object literal %s.
