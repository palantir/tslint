[typescript]: >= 2.4.0

export type SomeType =

    | null
      ~~~~
    | undefined
~~~~~~~~~~~~~~~
    | boolean;
~~~~~~~~~~~~~ [0]

const x: SomeType;

const someFunc = (): SomeType => {}

interface SomeInterface {
    foo: number | undefined | null;
         ~~~~~~~~~~~~~~~~~~~~~~~~~ [0]
    bar: boolean;
}

function(foo: SomeInterface) {}

const y: string | null | undefined;
         ~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

const someFunc = (): string | undefined | null => {}
                     ~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

const someFunc = (foo: null | string | undefined, bar: boolean) => {}
                       ~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

function someFunc(): number | undefined | null {}
                     ~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

function someFunc(): Promise<number | null | undefined> {} // error
                             ~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

function someFunc(bar: boolean, foo: null | number | undefined) {}
                                     ~~~~~~~~~~~~~~~~~~~~~~~~~ [0]

function testFunc() {
~~~~~~~~~~~~~~~~~~~~~
    const somePredicate = (): boolean => true;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    const someFunc = (): string | null => null;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    let foo;
~~~~~~~~~~~~
    if (somePredicate()) {
~~~~~~~~~~~~~~~~~~~~~~~~~~
        foo = someFunc();
~~~~~~~~~~~~~~~~~~~~~~~~~
    }
~~~~~
    return foo;
~~~~~~~~~~~~~~~
}
~ [0]

const z = testFunc();

[0]: Union type cannot include both 'null' and 'undefined'.
