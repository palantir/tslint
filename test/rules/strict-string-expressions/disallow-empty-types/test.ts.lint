  const fooAny: any;
  const fooStr: string = 'foo';
  const fooNumber = 2;
  class FooClass {}
  class ClassWithToString {
      public static toString () { return ''; }
      public toString () { return ''; }
  }
  const classWithToString = new ClassWithToString();
  const FooStr = new String('foo');
  const fooArr = ['foo'];
  const emptyArr = [];
  const stringUni = "foo" | "bar";
  const booleanVar: boolean;

  `foo`
  `${'str literal'}`
  `${123}`
  `${fooAny}`
  `${fooStr}`
  `${stringUni}`
  `${fooNumber}`
  `${(typeof window)}`
  `${FooClass}`
     ~~~~~~~~~~ [Explicit conversion to string type required]
  `${ClassWithToString}`
     ~~~~~~~~~~~~~~~~~~~ [Explicit conversion to string type required]
  `${classWithToString}`
     ~~~~~~~~~~~~~~~~~~~ [Explicit conversion to string type required]
  `${FooStr}`
     ~~~~~~~~ [Explicit conversion to string type required]
  `${fooArr}`
     ~~~~~~~~ [Explicit conversion to string type required]
  `${emptyArr}`
     ~~~~~~~~~~ [Explicit conversion to string type required]
  `${booleanVar}`

  `${String('str literal')}`
  `${String(123)}`
  `${String(fooAny)}`
  `${String(fooStr)}`
  `${String(stringUni)}`
  `${String(fooNumber)}`
  `${String((typeof window))}`
  `${String(FooClass)}`
  `${String(ClassWithToString)}`
  `${String(classWithToString)}`
  `${String(FooStr)}`
  `${String(fooArr)}`
  `${String(emptyArr)}`
  `${String(booleanVar)}`

  `${'str literal'.toString()}`
  `${123..toString()}`
  `${fooAny.toString()}`
  `${fooStr.toString()}`
  `${stringUni.toString()}`
  `${fooNumber.toString()}`
  `${(typeof window).toString()}`
  `${FooClass.toString()}`
  `${ClassWithToString.toString()}`
  `${classWithToString.toString()}`
  `${FooStr.toString()}`
  `${fooArr.toString()}`
  `${emptyArr.toString()}`
  `${booleanVar.toString()}`

  'str' + 'str literal' + 'str'
  'str' + 123 + 'str'
  'str' + fooAny + 'str'
  'str' + fooStr + 'str'
  'str' + stringUni + 'str'
  'str' + fooNumber + 'str'
  'str' + (typeof window) + 'str'
  'str' + FooClass + 'str'
  ~~~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + ClassWithToString + 'str'
  ~~~~~~~~~~~~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + classWithToString + 'str'
  ~~~~~~~~~~~~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + FooStr + 'str'
  ~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + fooArr + 'str'
  ~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + emptyArr + 'str'
  ~~~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + booleanVar + 'str'

  'str' + String('str literal') + 'str'
  'str' + String(123) + 'str'
  'str' + String(fooAny) + 'str'
  'str' + String(fooStr) + 'str'
  'str' + String(stringUni) + 'str'
  'str' + String(fooNumber) + 'str'
  'str' + String((typeof window)) + 'str'
  'str' + String(FooClass) + 'str'
  'str' + String(ClassWithToString) + 'str'
  'str' + String(classWithToString) + 'str'
  'str' + String(FooStr) + 'str'
  'str' + String(fooArr) + 'str'
  'str' + String(emptyArr) + 'str'
  'str' + String(booleanVar) + 'str'

  'str' + 'str literal'.toString() + 'str'
  'str' + 123..toString() + 'str'
  'str' + fooAny.toString() + 'str'
  'str' + fooStr.toString() + 'str'
  'str' + stringUni.toString() + 'str'
  'str' + fooNumber.toString() + 'str'
  'str' + (typeof window).toString() + 'str'
  'str' + FooClass.toString() + 'str'
  'str' + ClassWithToString.toString() + 'str'
  'str' + classWithToString.toString() + 'str'
  'str' + FooStr.toString() + 'str'
  'str' + fooArr.toString() + 'str'
  'str' + emptyArr.toString() + 'str'
  'str' + booleanVar.toString() + 'str'

  const barFooStrOrUndef: string | undefined;
  const barFooStrOrNull: string | null;
  const neverType: never;

  `${barFooStrOrUndef}`
     ~~~~~~~~~~~~~~~~~~ [Explicit conversion to string type required]
  `${barFooStrOrNull}`
     ~~~~~~~~~~~~~~~~~ [Explicit conversion to string type required]
  `${neverType}`
     ~~~~~~~~~~~ [Explicit conversion to string type required]

  `${String(barFooStrOrUndef)}`
  `${String(barFooStrOrNull)}`
  `${String(neverType)}`

  `${barFooStrOrUndef.toString()}`
  `${barFooStrOrNull.toString()}`
  `${neverType.toString()}`

  'str' + barFooStrOrUndef + 'str'
  ~~~~~~~~~~~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + barFooStrOrNull + 'str'
  ~~~~~~~~~~~~~~~~~~~~~~~         [Explicit conversion to string type required]
  'str' + neverType + 'str'
  ~~~~~~~~~~~~~~~~~         [Explicit conversion to string type required]

  'str' + String(barFooStrOrUndef) + 'str'
  'str' + String(barFooStrOrNull) + 'str'
  'str' + String(neverType) + 'str'

  'str' + barFooStrOrUndef.toString() + 'str'
  'str' + barFooStrOrNull.toString() + 'str'
  'str' + neverType.toString() + 'str'
