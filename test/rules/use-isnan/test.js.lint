
// no violation for comparing NaN using isNaN
if (isNaN(NaN)) {
}

// no violation for correctly checking for isNaN
if (isNaN(something)) { }

// no violation for assignments
let x = 0;
x = NaN;

// do not use equality operators to compare for NaN
if (foo == NaN) {  }
    ~~~~~~~~~~         [Found an invalid comparison for NaN: foo == NaN]
if (NaN === foo) {  }
    ~~~~~~~~~~~        [Found an invalid comparison for NaN: NaN === foo]
if (foo != NaN) {  }
    ~~~~~~~~~~         [Found an invalid comparison for NaN: foo != NaN]
if (NaN !== foo) {  }
    ~~~~~~~~~~~        [Found an invalid comparison for NaN: NaN !== foo]

// do not use any binary operators to compare for NaN
if (foo > NaN) { }
    ~~~~~~~~~         [Found an invalid comparison for NaN: foo > NaN]
if (NaN >= foo) { }
    ~~~~~~~~~~        [Found an invalid comparison for NaN: NaN >= foo]
if (foo < NaN) { }
    ~~~~~~~~~         [Found an invalid comparison for NaN: foo < NaN]
if (NaN <= foo) { }
    ~~~~~~~~~~        [Found an invalid comparison for NaN: NaN <= foo]
