let a = () => throw 'bla';
              ~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]

let b = () => throw new Error('bla');

let c = () => throw 'string1' + 'string2' + 'string3';
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]

let d = () => throw 'string' + 1;
              ~~~~~~~~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]

let e = () => throw 'string1' + 1 + {};
              ~~~~~~~~~~~~~~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]

let f = () => throw ('string');
              ~~~~~~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]

let g = () => throw 1 + 2 + ('string');
              ~~~~~~~~~~~~~~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]

// no warning because rule does not check for toString()
const one = 1;
let h = () => throw one.toString();

let i = () => throw `some template string`;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]

const someVariable = 123;
let j = () => throw `template with ${someVariable} string`;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [Throwing plain strings (not instances of Error) gives no stack traces]
