    export var ast=AST;
                  ~     [missing whitespace]
                   ~    [missing whitespace]

    var y = (x === 10)?1:2;
                      ~     [missing whitespace]
                       ~    [missing whitespace]
                        ~   [missing whitespace]
                         ~  [missing whitespace]

    var zz = (y===4);
               ~      [missing whitespace]
                  ~   [missing whitespace]

    var z=y;
         ~   [missing whitespace]
          ~  [missing whitespace]

    var a,b;
          ~  [missing whitespace]

    switch(x) {
          ~     [missing whitespace]
        case 1:break;
               ~      [missing whitespace]
        default:break;
                ~      [missing whitespace]
    }

    for(x = 1;x <2; ++x) {
       ~                   [missing whitespace]
              ~            [missing whitespace]
                 ~         [missing whitespace]
        goto:console.log("hi");
             ~                  [missing whitespace]
    }

    while(i < 1) {
         ~         [missing whitespace]
        ++i;
    }

    var q;
    q.forEach(()=>3);
                ~     [missing whitespace]
                  ~   [missing whitespace]
    q.forEach(()=>{
                ~   [missing whitespace]
                  ~ [missing whitespace]
        return 3;
    });

var a;

a.then(() => {
    return 1;
}).if(() => {
    return 1;
});

var name = "something";
var test = `
<sl-property-group label=${name} Axes">
  <div class="repeat"
`;

import { importA } from "libA";
import { importB }from "libB";
                  ~            [missing whitespace]
import{importC}from"libC";
      ~                    [missing whitespace]
               ~           [missing whitespace]
                   ~       [missing whitespace]
import moduleD, {importD}from "libD";
                         ~            [missing whitespace]

export default 123;

const D = 123;
export{ D as default }; // failure
      ~                            [missing whitespace]

export function each(obj, iterator, context) {
    //
}

export {each as forEach};
import "libE";

function foobar(){}
                 ~ [missing whitespace]

function foorbar()
{}

if (){
     ~ [missing whitespace]
    //
} else{}
      ~ [missing whitespace]

if ()
{}
else
{}

/* some comment */{
    // some code with a preceding comment
}

{
    const foo = 123;
    // code that just wants to be encapsulated in a block scope
}
