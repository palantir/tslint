function func(): void {}

type NormalType = () => void;

interface Interface {
    lambda: () => void;
    voidProp: void;
              ~~~~ [0]
}

class ClassName {
    private readonly propName: void;
                               ~~~~ [0]
}

let letVoid: void;
             ~~~~ [0]

type VoidType = void;
                ~~~~ [0]

class OtherClassName {
    private propName: VoidType;
}

type UnionType = string | number;
type UnionType2 = string | number | void;
                                    ~~~~ [0]

type UnionType3 = string | (number & any | (string | void));
                                                     ~~~~ [0]

type IntersectionType = string & number & void;
                                          ~~~~ [0]

[0]: void is not a valid type other than return types
