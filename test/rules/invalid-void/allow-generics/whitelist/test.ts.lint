type Allowed<T> = [T];
type AllowedVoid = Allowed<void>;

type Banned<T> = [T];
type BannedVoid = Banned<void>;
                         ~~~~ [Generic % ('Banned')]

function takeVoid(thing: void) { }
                         ~~~~ [0]

[0]: void is only valid as a return type or generic type variable
[Generic]: %s may not have void as a type variable
