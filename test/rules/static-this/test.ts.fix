class StaticThis {
    static value = 0;
    static staticValue = StaticThis.value;

    static _color = undefined;

    static get color() {
        return StaticThis._color;
    }

    static set color(color) {
        StaticThis._color = color;
    }

    static getTypeOf() {
        return StaticThis;
    }

    private _value = 5;

    getValue() {
        return this._value;
    }

    get length() {
        return this._value;
    }

    set length(value) {
        this._value = value;
    }
}

class Child extends StaticThis {
    static word = 'Hello';
    static staticValue = Child.word;

    static getTypeOf() {
        return Child;
    }
}

const AnonymClass = class {
    static getTypeOf() {
        return this;
    }
}

class AnonymClassChild extends AnonymClass {
    static getTypeOf() {
        return AnonymClassChild;
    }
}

const NamedClass = class Name {
    static getTypeOf() {
        return Name;
    }
}

class NamedClassChild extends NamedClass {
    static getTypeOf() {
        return NamedClassChild;
    }
}

interface Bar {}

class Foo {
    public static higherOrderComponent(): any {
        return class implements Bar {
            public constructor() {
                console.log(this);
            }
        };
    }
}
