var a = [
    'foo',
    'bar',
         ~ [Unnecessary trailing comma]
]

var a = [
    'foo',
    'bar'
]

export {
    foo,
    bar
       ~nil [Missing trailing comma]
}

export {
    foo,
    bar,
}

function foo(
    bar,
    baz,
)

function bar(
    foo,
    bar
)

foo(
    bar,
    baz,
)

foo(
    bar,
    baz
)

import {
    foo,
    bar,
       ~ [Unnecessary trailing comma]
} from 'foo'

import {
    foo,
    bar
} from 'foo'

var o = {
    foo: 'foo',
    bar: 'bar'
              ~nil [Missing trailing comma]
}

var o = {
    foo: 'foo',
    bar: 'bar',
}

interface Foo {
    foo: string,
    bar: string
}

interface Foo {
    foo: string,
    bar: string,
}

interface Foo {
    foo: string;
    bar: string;
}

const foo = [isTrue
    && valueWhenIsTrue
    || valueWhenIsNot,
];

const foo = [
    isTrue
        && valueWhenIsTrue
        || valueWhenIsNot,
                         ~ [Unnecessary trailing comma]
];

const foo = { bar: isTrue
    ? valueWhenIsTrue
    : valueWhenIsNot
};

const foo = {
    bar: isTrue
        ? valueWhenIsTrue
        : valueWhenIsNot
                        ~nil [Missing trailing comma]
};
