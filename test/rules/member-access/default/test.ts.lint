declare class AmbientNoAccess {
    a(): number;
    ~~~~~~~~~~~~ [The class method 'a' must be marked either 'private', 'public', or 'protected']

    static b(): number;
    ~~~~~~~~~~~~~~~~~~~ [The class method 'b' must be marked either 'private', 'public', or 'protected']
}

declare class AmbientAccess {
    public a(): number;
    public static b(): number;
}

class Members {
    i: number;
    ~~~~~~~~~~ [The class property 'i' must be marked either 'private', 'public', or 'protected']
    static j: number;
    ~~~~~~~~~~~~~~~~~ [The class property 'j' must be marked either 'private', 'public', or 'protected']

    public nPublic: number;
    protected nProtected: number;
    private nPrivate: number;

    public static nsPublic: number;
    protected static nsProtected: number;
    private static nsPrivate: number;

    noAccess(x: number): number;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [The class method 'noAccess' must be marked either 'private', 'public', or 'protected']
    noAccess(o: any): any {}
    ~~~~~~~~~~~~~~~~~~~~~~~~ [The class method 'noAccess' must be marked either 'private', 'public', or 'protected']

    static noAccess(x: number): number;
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [The class method 'noAccess' must be marked either 'private', 'public', or 'protected']
    static noAccess(o: any): any {}
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ [The class method 'noAccess' must be marked either 'private', 'public', or 'protected']

    public access(x: number): number;
    public access(o: any): any {}

    public static access(x: number): number;
    public static access(o: any): any {}
}

const obj = {
    func() {}
};

function main() {
    class A {
        i: number;
        ~~~~~~~~~~ [The class property 'i' must be marked either 'private', 'public', or 'protected']
        static j: number;
        ~~~~~~~~~~~~~~~~~ [The class property 'j' must be marked either 'private', 'public', or 'protected']
        public n: number;
    }
}
